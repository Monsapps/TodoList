<?php
/**
 * UserService
 * 
 * Business code for User
 */
namespace App\Service;

use App\Entity\User;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;

class UserService
{

    private $managerRegistry;
    private $passwordHasher;

    public function __construct(ManagerRegistry $managerRegistry, UserPasswordHasherInterface $passwordHasher)
    {
        $this->managerRegistry = $managerRegistry;
        $this->passwordHasher = $passwordHasher;
    }

    /**
     * Get users list
     * 
     * @return User[]
     */
    public function getUsersList(): ?array
    {
        return $this->managerRegistry->getRepository(User::class)->findAll();
    }

    /**
     * Create new user
     * 
     * @return User
     */
    public function createUser(): User
    {
        return new User();
    }

    /**
     * Add hashed password to user and persist to the database
     * 
     * @param User $user the user generated by UserType
     * @return void
     */
    public function addUser(User $user): void
    {
        $entityManager = $this->managerRegistry->getManager();

        $password = $this->passwordHasher->hashPassword($user, $user->getPassword());
        $user->setPassword($password);

        $entityManager->persist($user);
        $entityManager->flush();
    }

    /**
     * Update user to database, hash new password if needed
     * 
     * @param User $user the user to update
     * @param string|null the plain password if filled
     * @return void
     */
    public function updateUser(User $user, ?string $plainPassword): void
    {

        if($plainPassword !== null) {
            $password = $this->passwordHasher->hashPassword($user, $plainPassword);
            $user->setPassword($password);
        }

        $this->managerRegistry->getManager()->flush();
    }

}
